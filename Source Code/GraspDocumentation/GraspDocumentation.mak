### This Makefile creates some documentation automatically.
### It uses the GraspVR package to create images that are up to date.

### Where shall we put the documentation.
### Path is relative to the current project directory.
DOCUMENTATION_DESTINATION=..\..\Documentation

### Where we can find the tools we need to make the documents.
### Again, relative to the current project directory.
BUILDTOOLS=..\..\BuildTools

### Where do the Instructions lie that need to go into the documentation.
INSTRUCTIONS=..\..\Instructions

### A local subdirectory where we keep manually-generated screen shots.
GUI=GUIScreenshots

### The project GraspBMPs gernerates some bitmaps. We go get them from that project.
VRMESSAGES=..\GraspBMPs

### We need to generate some screen shots from the Grasp VR renderers.
### Another project creates the executable that allows us to do that.
### Here we set a path to the executable in a way that depends on the build configuration.
### This executable has to be run while in the GRASP root directory to have access to all 
###  the required bitmaps etc., so the path definition is a bit different. When this 
###  executable gets called, it will be after doing a CD to the Grasp root directory.
SCREENSHOTEXE="Source Code\"$(BUILDCONFIGURATION)"\GraspScreenshots.exe" --size=512

### A list of the documents that we want to produce.
DOCUMENTS=AllGraspScreensForReview.pdf  \
	GraspGUIScreens.pdf GeneralInstructions.pdf\
	InstallSeated.pdf InstallFloating.pdf ManualManualInstructions.pdf VisualManualInstructions.pdf VisualVisualInstructions.pdf \
	VisualVisualScenes.pdf VisualManualScenes.pdf  ManualManualScenes.pdf GraspIntro.pdf

### Pictures that are needed and created dynamically as part of the build process.
SCREENSHOTS = ready.bmp \
	upright.bmp leftFarAlign.bmp leftCloserAlign.bmp leftNearAlign.bmp goodAlign.bmp rightNearAlign.bmp rightCloserAlign.bmp rightFarAlign.bmp \
	leftFarRedress.bmp leftCloserRedress.bmp leftNearRedress.bmp goodRedress.bmp rightNearRedress.bmp rightCloserRedress.bmp rightFarRedress.bmp \
	vTarget.bmp kTargetFar.bmp kTargetNear.bmp kTargetGood.bmp vTool.bmp kTool.bmp trialCompleted.bmp blockCompleted.bmp vrCompleted.bmp

### We also need some screen shots from the GUI. They are generated by hand and kept in a local subdirectory.
### By not keeping them directly in the project directory, we can clean out the other images with wild card specs such as *.bmp.
GUISHOTS = $(GUI)\Alert.png  $(GUI)\Execute.png  $(GUI)\Instruction.png   $(GUI)\Success.png   $(GUI)\Login.png  $(GUI)\SelectSubsession.png  $(GUI)\StartTask.png 

install: $(DOCUMENTS)
	-rmdir /S /Q $(DOCUMENTATION_DESTINATION)
	mkdir $(DOCUMENTATION_DESTINATION)
	copy *.pdf $(DOCUMENTATION_DESTINATION)
	mkdir $(DOCUMENTATION_DESTINATION)\Images
	copy GUIScreenshots\*  $(DOCUMENTATION_DESTINATION)\Images
	copy *.bmp $(DOCUMENTATION_DESTINATION)\Images
	copy $(VRMESSAGES)\*.bmp $(DOCUMENTATION_DESTINATION)\Images
	echo %date% %time% > $@

ready.bmp: 
	cd ..\.. & $(SCREENSHOTEXE) --head=0.0 --ReadyToStart  $@
	move ..\..\$@ .

upright.bmp: 
	cd ..\.. & $(SCREENSHOTEXE) --NoRoom --headError=0.0 --Redress  $@
	move ..\..\$@ .
	
vrCompleted.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=0.0 --VRCompleted  $@
	move ..\..\$@ .

blockCompleted.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=0.0 --BlockCompleted  $@
	move ..\..\$@ .

trialCompleted.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=0.0 --TrialCompleted  $@
	move ..\..\$@ .

kTargetFar.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --targetSphere --head=0.0 --headError=0.0 --hand=35.0 --handError=15.0 --kkTool --handArrowLeft  $@
	move ..\..\$@ .
	
kTargetNear.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --targetSphere --head=0.0 --headError=0.0 --hand=24.0 --handError=3.0 --kkTool  $@
	move ..\..\$@ .

kTargetGood.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --targetSphere --head=0.0 --headError=0.0 --hand=20.0 --handError=0.0 --kkTool  $@
	move ..\..\$@ .

vTarget.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=0.0 --headError=0.0 --target=20.0  $@
	move ..\..\$@ .

vTool.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=15.0 --headError=0.0 --vTool  $@
	move ..\..\$@ .

kTool.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --targetSphere --head=15.0 --headError=0.0 --kTool  $@
	move ..\..\$@ .

leftFarAlign.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=-20.0 --headError=20.0 --headArrowRight  $@
	move ..\..\$@ .
	
leftCloserAlign.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=-5.0 --headError=10.0   $@
	move ..\..\$@ .

leftNearAlign.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=-3.0 --headError=3.0   $@
	move ..\..\$@ .

goodAlign.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=0.0 --headError=0.0   $@
	move ..\..\$@ .	

rightNearAlign.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=3.0 --headError=-3.0   $@
	move ..\..\$@ .

rightCloserAlign.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=5.0 --headError=-10.0   $@
	move ..\..\$@ .

rightFarAlign.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --head=20.0 --headError=-20.0 --headArrowLeft  $@
	move ..\..\$@ .

leftFarRedress.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --Redress --NoRoom --OffCenter --head=-20.0 --headError=20.0 --headArrowRight  $@
	move ..\..\$@ .
	
leftCloserRedress.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --Redress --NoRoom --head=-5.0 --headError=10.0   $@
	move ..\..\$@ .

leftNearRedress.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --Redress --NoRoom --head=-3.0 --headError=3.0   $@
	move ..\..\$@ .

goodRedress.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --Redress --NoRoom --head=0.0 --headError=0.0   $@
	move ..\..\$@ .	

rightNearRedress.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --Redress --NoRoom --head=3.0 --headError=-3.0   $@
	move ..\..\$@ .

rightCloserRedress.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --Redress --NoRoom --head=5.0 --headError=-10.0   $@
	move ..\..\$@ .

rightFarRedress.bmp:  
	cd ..\.. & $(SCREENSHOTEXE) --Redress --NoRoom --OffCenter --head=20.0 --headError=-20.0 --headArrowLeft  $@
	move ..\..\$@ .

# Define the path to the pandoc.exe program that does the conversion.
PANDOC=pandoc.exe
PANDOC_OPTIONS=

# Define the preprocessor.
PREPROCESSOR=cl.exe
# The preprocessor that we are using is actually the Visual C++ compiler.
# The /EP option tells the compiler to preprocess only. 
# The /FI forces the inclusion of the preprocessor macros that we have defined. 
PREPROCESSOR_OPTIONS=/EP /nologo /FI macros.h

GraspIntro.html: GraspIntro.md GraspDocumentation.mak
	$(PREPROCESSOR) $(PREPROCESSOR_OPTIONS)  GraspIntro.md | $(PANDOC) $(PANDOC_OPTIONS)  -o $@

GraspIntro.pdf: GraspIntro.html
	$(BUILDTOOLS)\wkhtmltopdf.exe  --minimum-font-size 24 --page-size A4  --default-header --header-left "Introduction" --header-font-size 12 --margin-bottom 25 --margin-top 35  --header-spacing 10 GraspIntro.html $@

VisualVisualScenes.html: macros.h VisualVisualScenes.md $(SCREENSHOTS)
	$(PREPROCESSOR) $(PREPROCESSOR_OPTIONS)  VisualVisualScenes.md | $(PANDOC) $(PANDOC_OPTIONS)  -o $@

VisualVisualScenes.pdf: VisualVisualScenes.html
	$(BUILDTOOLS)\wkhtmltopdf.exe  --minimum-font-size 24 --page-size A4  --default-header --header-left "Visual-Visual VR Sequence" --header-font-size 12 --margin-bottom 25 --margin-top 35  --header-spacing 10 VisualVisualScenes.html $@

VisualManualScenes.html: macros.h VisualManualScenes.md $(SCREENSHOTS)
	$(PREPROCESSOR) $(PREPROCESSOR_OPTIONS)  VisualManualScenes.md | $(PANDOC) $(PANDOC_OPTIONS)  -o $@

VisualManualScenes.pdf: VisualManualScenes.html
	$(BUILDTOOLS)\wkhtmltopdf.exe  --minimum-font-size 24 --page-size A4  --default-header --header-left "Visual-Manual VR Sequence" --header-font-size 12 --margin-bottom 25 --margin-top 35  --header-spacing 10 VisualManualScenes.html $@

ManualManualScenes.html: macros.h ManualManualScenes.md $(SCREENSHOTS)
	$(PREPROCESSOR) $(PREPROCESSOR_OPTIONS)  ManualManualScenes.md | $(PANDOC) $(PANDOC_OPTIONS)  -o $@

ManualManualScenes.pdf: ManualManualScenes.html
	$(BUILDTOOLS)\wkhtmltopdf.exe  --minimum-font-size 24 --page-size A4  --default-header --header-left "Manual-Manual VR Sequence" --header-font-size 12 --margin-bottom 25 --margin-top 35  --header-spacing 10  ManualManualScenes.html $@

# Create a document describing the GUI pages.
GraspGUIScreens.html: $(GUISHOTS) GraspGUIScreens.md GraspDocumentation.mak
	$(PREPROCESSOR) $(PREPROCESSOR_OPTIONS)  GraspGUIScreens.md | $(PANDOC) $(PANDOC_OPTIONS)  -o $@

GraspGUIScreens.pdf: GraspGUIScreens.html
	$(BUILDTOOLS)\wkhtmltopdf.exe  --page-size A4  --default-header --header-left "GRASP Software User Interface" --header-font-size 8 --margin-bottom 10 --margin-top 20  --header-spacing 4 $(**) $@

# The idea here is to create documents to show all the instruction screens, all the prompt screens and all the status screens, one for each category.
# Note that because of the trick I am using in order to wild card the input files to wkhtmltopdf.exe, I cannot make these outputs dependent
# on the makefile. So if you change this makefile you have to remember to rebuild.

GraspAllInstructionScreens.pdf: $(INSTRUCTIONS)\*.instruction.html  
	$(BUILDTOOLS)\wkhtmltopdf.exe  --page-size A6  --default-header --header-left "GRASP Instruction Screens" --header-font-size 8 --margin-bottom 10 --margin-top 15  --header-spacing 4 $(**) $@

GraspAllPromptScreens.pdf: $(INSTRUCTIONS)\*.prompt.html
	$(BUILDTOOLS)\wkhtmltopdf.exe  --page-size A6  --default-header --header-left "GRASP Prompt Screens" --header-font-size 8 --header-spacing 5 --margin-top 15  --margin-bottom 10 $(**) $@

GraspAllStatusScreens.pdf: $(INSTRUCTIONS)\*.status.html
	$(BUILDTOOLS)\wkhtmltopdf.exe  --page-size A6  --default-header --header-left "Status and Alert Screens" --header-font-size 8 --header-spacing 5 --margin-top 15  --margin-bottom 10 $(**) $@

INSTALL_SEATED = $(INSTRUCTIONS)\CodaAlignSeated.prompt.html $(INSTRUCTIONS)\AlignmentRunning.instruction.html   $(INSTRUCTIONS)\HMDStructureAssembly.instruction.html  $(INSTRUCTIONS)\ObjectPositioningSeated.instruction.html  
InstallSeated.pdf: $(INSTALL_SEATED) 
	$(BUILDTOOLS)\wkhtmltopdf.exe   --page-height 180 --page-width 105  --default-header --header-left "Install Seated Instruction Sequence" --header-font-size 8 --header-spacing 5 --margin-top 15  --margin-bottom 10 $(**) $@	

INSTALL_FLOATING = $(INSTRUCTIONS)\CodaAlignFloating.prompt.html  $(INSTRUCTIONS)\AlignmentRunning.instruction.html   $(INSTRUCTIONS)\HMDStructureAssembly.instruction.html  $(INSTRUCTIONS)\ObjectPositioningSeated.instruction.html 
InstallFloating.pdf: $(INSTALL_FLOATING) 
	$(BUILDTOOLS)\wkhtmltopdf.exe  --page-height 180 --page-width 105  --default-header --header-left "Install Floating Instruction Sequence" --header-font-size 8 --header-spacing 2 --margin-top 10  --margin-bottom 10 $(**) $@	

MM =  $(INSTRUCTIONS)\00IntroK-K.instruction.html  \
	$(INSTRUCTIONS)\00StraightenHead.instruction.html $(INSTRUCTIONS)\01StraightenHead.instruction.html  \
	$(INSTRUCTIONS)\02TargetK.instruction.html   $(INSTRUCTIONS)\03TiltHead.instruction.html \
	$(INSTRUCTIONS)\04RespondK.instruction.html  $(INSTRUCTIONS)\05Feedback.instruction.html 

ManualManualInstructions.pdf: $(MM) 
	$(BUILDTOOLS)\wkhtmltopdf.exe --page-height 180 --page-width 105  --default-header --header-left "Manual-Manual Instruction Sequence" --header-font-size 8 --header-spacing 2 --margin-top 10  --margin-bottom 10 $(**) $@	

VM = $(INSTRUCTIONS)\00IntroV-K.instruction.html  \
	$(INSTRUCTIONS)\00StraightenHead.instruction.html $(INSTRUCTIONS)\01StraightenHead.instruction.html  \
	 $(INSTRUCTIONS)\02TargetV.instruction.html   $(INSTRUCTIONS)\03TiltHead.instruction.html \
	 $(INSTRUCTIONS)\04RespondK.instruction.html  $(INSTRUCTIONS)\05Feedback.instruction.html 

VisualManualInstructions.pdf: $(VM) 
	$(BUILDTOOLS)\wkhtmltopdf.exe --page-height 180 --page-width 105   --default-header --header-left "Visual-Manual Instruction Sequence" --header-font-size 8 --header-spacing 2 --margin-top 10  --margin-bottom 10 $(**) $@	

VV = $(INSTRUCTIONS)\00IntroV-V.instruction.html  \
	$(INSTRUCTIONS)\00StraightenHead.instruction.html $(INSTRUCTIONS)\01StraightenHead.instruction.html  \
	 $(INSTRUCTIONS)\02TargetV.instruction.html   $(INSTRUCTIONS)\03TiltHead.instruction.html \
	 $(INSTRUCTIONS)\04RespondV.instruction.html  $(INSTRUCTIONS)\05Feedback.instruction.html 

VisualVisualInstructions.pdf: $(VV) 
	$(BUILDTOOLS)\wkhtmltopdf.exe  --page-height 180 --page-width 105  --default-header --header-left "Visual-Visual Instruction Sequence" --header-font-size 8 --header-spacing 2 --margin-top 10  --margin-bottom 10 $(**) $@	

II = $(INSTRUCTIONS)\StepReady.prompt.html  \
		$(INSTRUCTIONS)\StepReadySeated.prompt.html \
		$(INSTRUCTIONS)\StepReadyFloating.prompt.html  \
		$(INSTRUCTIONS)\StepRunning.instruction.html  \
		$(INSTRUCTIONS)\StepNormalFinish.status.html  \
		$(INSTRUCTIONS)\StepErrorFinish.status.html  \
		$(INSTRUCTIONS)\CodaAlignSeated.prompt.html  \
		$(INSTRUCTIONS)\CodaAlignFloating.prompt.html  \
		$(INSTRUCTIONS)\AlignCodaInterruptFinish.status.html  \
		$(INSTRUCTIONS)\AlignCodaMisalignFinish.status.html  \
		$(INSTRUCTIONS)\HMDStructureAssembly.instruction.html  \
		$(INSTRUCTIONS)\ObjectPositioningSeated.instruction.html  \
		$(INSTRUCTIONS)\ObjectPositioningFloating.instruction.html  \
		$(INSTRUCTIONS)\FileTransferErrorFinish.status.html  \
		$(INSTRUCTIONS)\IncompleteErrorFinish.status.html  \
		$(INSTRUCTIONS)\MaxRetriesErrorFinish.status.html  \
		$(INSTRUCTIONS)\SetNoCodaReady.prompt.html  \
		$(INSTRUCTIONS)\SetWithCodaReady.prompt.html  \
		$(INSTRUCTIONS)\FileTransferReady.prompt.html  \
		$(INSTRUCTIONS)\TaskFinished.instruction.html  \
		$(INSTRUCTIONS)\ProtocolFinished.instruction.html  

GeneralInstructions.pdf: $(II) 
	echo this
	$(BUILDTOOLS)\wkhtmltopdf.exe  --page-height 180 --page-width 105  --default-header --header-left "Instructions and Status Reports" --header-font-size 8 --header-spacing 2 --margin-top 10  --margin-bottom 10 $(**) $@	

### GraspVRMessages.pdf is created by the GraspBMP project. We just go and get the output.
GraspVRMessages.pdf: $(VRMESSAGES)\GraspVRMessages.pdf
	copy $(VRMESSAGES)\GraspVRMessages.pdf .

# Here we combine the Instruction screens and the VR prompts into a single document.
# The file containing the VR prompts (GraspVRMessages.pdf) was created in the project 
# where the bitmaps are created because it is easier to do it there.

COMBINED = GraspIntro.pdf GraspGUIScreens.pdf \
	InstallSeated.pdf InstallFloating.pdf \
	VisualVisualInstructions.pdf VisualVisualScenes.pdf \
	ManualManualInstructions.pdf ManualManualScenes.pdf \
	VisualManualInstructions.pdf VisualManualScenes.pdf \
	GeneralInstructions.pdf GraspVRMessages.pdf

AllGraspScreensForReview.pdf: $(COMBINED) $(VRMESSAGES)\GraspVRMessages.pdf 
	 $(BUILDTOOLS)\pdftk.exe $(**) cat output $@

.SUFFIXES: .html .md .tex
.md.html:
	$(PREPROCESSOR) $(PREPROCESSOR_OPTIONS) $? | $(PANDOC) $(PANDOC_OPTIONS)  -o $@
